function [conn,sqltableup,sqltabledn,sqltableall] = initSQLDatabase()
    %%================== initialize sql database for data export
    %Details and auth info available in docker-compose
    %Import the database connection function
    import matlab.sql.*
    %Set up database
    datasource ="Seto_DB";
    username = "seto_db_user";
    password = "seto_db_pwd";
    vendor = "PostgreSQL";
    opts = databaseConnectionOptions("native",vendor);
    opts = setoptions(opts,'DataSourceName',"Seto_DB", ...
        'DatabaseName',"setomatlabdb",'Server',"192.168.1.90", ...
        'PortNumber',5488);
    
    success = false;

    while ~success
        try
            %Check if database is available
            %status = testConnection(opts,username,password);11
            saveAsDataSource(opts)
            %Connect to database
            conn = postgresql(datasource,username,password);
            disp('SQL-Database connection successful')
            success = true;
        catch
            disp('Database not available. Check if SQL is running in Docker application. Retrying in 1 seconds...')
            pause(1)
        end
    end
    %Check if database is available
    %status = testConnection(opts,username,password);11
    %saveAsDataSource(opts)
    %Connect to database
    %conn = postgresql(datasource,username,password)
    %%initizialize tables
    %table names
    sqltableup = "result_up";
    sqltabledn = "result_dn";
    sqltableall = "result_all";
    %delet existing tables
    sqlquery = "DROP TABLE IF EXISTS " + sqltableup + " CASCADE;";
    execute(conn, sqlquery);
    sqlquery = "DROP TABLE IF EXISTS " + sqltabledn + " CASCADE;";
    execute(conn, sqlquery);
    sqlquery = "DROP TABLE IF EXISTS " + sqltableall + " CASCADE;";
    execute(conn, sqlquery);
    %set up new tables
    sqlquery = ( ...
        "create table " + sqltableup + " (" + ...
        "BusNumber INTEGER," + ...
        "Type INTEGER," + ...
        "P1_kw FLOAT," + ...
        "P2_kw FLOAT," + ...
        "P3_kw FLOAT," + ...
        "Q1_kvar FLOAT," + ...
        "Q2_kvar FLOAT," + ...
        "Q3_kvar FLOAT," + ...
        "P1_dis_kw FLOAT," + ...
        "P2_dis_kw FLOAT," + ...
        "P3_dis_kw FLOAT," + ...
        "Q1_dis_kw FLOAT," + ...
        "Q2_dis_kw FLOAT," + ...
        "Q3_dis_kw FLOAT," + ...
        "P1_soc_pred_kwh FLOAT," + ...
        "P2_soc_pred_kwh FLOAT," + ...
        "P3_soc_pred_kwh FLOAT," + ...
        "P1_soc_act_kwh FLOAT," + ...
        "P2_soc_act_kwh FLOAT," + ...
        "P3_soc_act_kwh FLOAT," + ...
        "sendStatus FLOAT," + ...
        "writeTimeStampMatlab TIMESTAMP," + ...
        "sendTimeStamp INTEGER," + ...
        "timeStep INTEGER" + ...
        ");" ...
        );
    execute(conn, sqlquery);
    sqlquery = ( ...
        "create table " + sqltabledn + " (" + ...
        "BusNumber INTEGER," + ...
        "Type INTEGER," + ...
        "P1_kw FLOAT," + ...
        "P2_kw FLOAT," + ...
        "P3_kw FLOAT," + ...
        "P1_dis_kw FLOAT," + ...
        "P2_dis_kw FLOAT," + ...
        "P3_dis_kw FLOAT," + ...
        "P1_soc_kwh FLOAT," + ...
        "P2_soc_kwh FLOAT," + ...
        "P3_soc_kwh FLOAT," + ...
        "sendStatus FLOAT," + ...
        "writeTimeStampMatlab TIMESTAMP," + ...
        "sendTimeStamp INTEGER," + ...
        "timeStep INTEGER," + ...
        "trackingStep INTEGER" + ...
        ");" ...
        );
    execute(conn, sqlquery);
    sqlquery = ( ...
        "create table " + sqltableall + " (" + ...
        "BusNumber INTEGER," + ...
        "Type INTEGER," + ...
        "timeStep INTEGER," + ...
        "trackingStep INTEGER," + ...
        "P1_kw FLOAT," + ...
        "P2_kw FLOAT," + ...
        "P3_kw FLOAT," + ...
        "Q1_kvar FLOAT," + ...
        "Q2_kvar FLOAT," + ...
        "Q3_kvar FLOAT," + ...
        "P1_dis_kw FLOAT," + ...
        "P2_dis_kw FLOAT," + ...
        "P3_dis_kw FLOAT," + ...
        "Q1_dis_kw FLOAT," + ...
        "Q2_dis_kw FLOAT," + ...
        "Q3_dis_kw FLOAT," + ...
        "P1_soc_kwh FLOAT," + ...
        "P2_soc_kwh FLOAT," + ...
        "P3_soc_kwh FLOAT," + ...
        "P1_soc_pred_kwh FLOAT," + ...
        "P2_soc_pred_kwh FLOAT," + ...
        "P3_soc_pred_kwh FLOAT," + ...
        "P1_soc_act_kwh FLOAT," + ...
        "P2_soc_act_kwh FLOAT," + ...
        "P3_soc_act_kwh FLOAT" + ...
        ");" ...
        );
    execute(conn, sqlquery);